name: PR checks

on:
  pull_request:
    branches:
      - 'main'

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      firmware: ${{ steps.changes.outputs.firmware }}
      middleware: ${{ steps.changes.outputs.middleware }}
      web: ${{ steps.changes.outputs.web }}
    steps:
    - id: changes
      uses: dorny/paths-filter@v3
      with:
        filters: |
          firmware:
          - 'firmware/**'
          middleware:
          - 'middleware/**'
          web:
          - 'web/**'

  build-firmware:
    needs: [changes]
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.firmware == 'true' }}
    defaults:
      run:
        working-directory: './firmware'
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.platformio/.cache
        key: ${{ runner.os }}-pio
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install PlatformIO Core
      run: pip install --upgrade platformio
    - run: pio run
  
  build-middleware:
    needs: [changes]
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.middleware == 'true' }}
    defaults:
      run:
        working-directory: './middleware'
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - run: pip install -r requirements.txt
    - run: python test_api.py

  build-web:
    needs: [changes]
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.web == 'true' }}
    steps:
    - uses: actions/checkout@v4
      with:
        working-directory: './web'
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - run: npm ci
    - run: npm run build